<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>
  <!--
    The following properties are set for running HBase as a single process on a
    developer workstation. With this configuration, HBase is running in
    "stand-alone" mode and without a distributed file system. In this mode, and
    without further configuration, HBase and ZooKeeper data are stored on the
    local filesystem, in a path under the value configured for `hbase.tmp.dir`.
    This value is overridden from its default value of `/tmp` because many
    systems clean `/tmp` on a regular basis. Instead, it points to a path within
    this HBase installation directory.

    Running against the `LocalFileSystem`, as opposed to a distributed
    filesystem, runs the risk of data integrity issues and data loss. Normally
    HBase will refuse to run in such an environment. Setting
    `hbase.unsafe.stream.capability.enforce` to `false` overrides this behavior,
    permitting operation. This configuration is for the developer workstation
    only and __should not be used in production!__

    See also https://hbase.apache.org/book.html#standalone_dist
  -->
        <property>
                <name>hbase.coprocessor.abortonerror</name>
                <value>false</value>
        </property>

	<property>
    		<name>hbase.coprocessor.region.classes</name>
   		<value>org.apache.hadoop.hbase.coprocessor.AggregateImplementation</value>
	</property> 
	<property>
		<name>hbase.regionserver.wal.codec</name>
		<value>org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec</value>
	</property>
	<property>
		<name>zookeeper.znode.parent</name>
		<value>/hbase</value>
	</property>
	<property>
                <name>storage.hbase.ext.zookeeper.znode.parent</name>
                <value>/hbase</value>
        </property>
	<property>
		<name>hbase.unsafe.stream.capability.enforce</name>
		<value>false</value>
	</property>
	<property>
		<name>hbase.rootdir</name>
		<value>hdfs://node01:9000/hbase</value>  
	</property>
	
	<property>
		<name>hbase.cluster.distributed</name>
		<value>true</value>
	</property>
	
	<!-- 0.98后的新变动，之前版本没有.port,默认端口为60000 -->
	<property>
		<name>hbase.master.port</name>
		<value>16000</value>
	</property>
	
	<property>
		<name>hbase.zookeeper.quorum</name>
		<value>node01:2181,node02:2181,node03:2181</value>
	</property>
	
	<property>
		<name>hbase.zookeeper.property.dataDir</name>
		<value>/home/software/apache-zookeeper-3.7.0-bin/zkdatas</value>
	</property>

	<property>
		<name>hbase.rpc.timeout</name>
		<value>600000</value>
	</property>

	<property>
		<name>hbase.client.operation.timeout</name>
		<value>600000</value>
	</property>

	<property>
		<name>hbase.client.scanner.timeout.period</name>
		<value>600000</value>
	</property>

	<property>
		<name>hbase.regionserver.lease.period</name>
		<value>600000</value>
	</property>

	<property>
		<name>phoenix.query.timeoutMs</name>
		<value>600000</value>
	</property>

	<property>
		<name>phoenix.query.keepAliveMs</name>
		<value>600000</value>
	</property>

	<property>
		<name>hbase.client.ipc.pool.type</name>
		<value>RoundRobinPool</value>
	</property>
	<property>
		<name>hbase.client.ipc.pool.size</name>
		<value>10</value>
	</property>

	<!--  建立二级索引，将业务需要的数据联立建立索引，方便查询 -->
	<property>
	   <name>hbase.regionserver.wal.codec</name>
	   <value>org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec</value>
	</property>
	
	<!-- 如果使用了 hbase 中的自定义 namespace，不仅仅使用default -->
	<!-- 那么在phoenix中与之对应的是schema的概念，但是默认并没有开启，需要在增加以下配置项 -->
	<property>
	  <name>phoenix.schema.isNamespaceMappingEnabled</name>
	  <value>true</value>
	</property>
	
	<property>
	  <name>phoenix.schema.mapSystemTablesToNamespace</name>
	  <value>true</value>
	</property>
	
	<property>
		<name>phoenix.default.column.encoded.bytes.attrib</name>
		<value>0</value>
	</property>
	
	<!-- 用户可以创建临时或永久的用户自定义函数。 -->
	<!-- 这些用户自定义函数可以像内置的create、upsert、delete一样被调用 -->
	<property>
	  <name>phoenix.functions.allowUserDefinedFunctions</name>
	  <value>true</value>
	  <description>enable UDF functions</description>
	</property>

	
</configuration>
